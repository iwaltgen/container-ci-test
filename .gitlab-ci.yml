
variables:
  CI_REGISTRY_IMAGE_BRANCH: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}
  CI_REGISTRY_IMAGE_BRANCH_BUILDER: ${CI_REGISTRY_IMAGE}/${CI_COMMIT_REF_SLUG}:builder
  DOCKER_DRIVER: overlay2

before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY


# container build
container_build:
  stage: build
  image: docker:stable
  services:
    - docker:stable-dind

  before_script:
    - echo "CI_PIPELINE_ID - $CI_PIPELINE_ID"
    - echo "CI_CONCURRENT_ID - $CI_CONCURRENT_ID"
    - echo "CI_JOB_ID - $CI_JOB_ID"
    - echo "CI_PROJECT_ID - $CI_PROJECT_ID"
  script:
    - docker pull "$CI_REGISTRY_IMAGE_BRANCH_BUILDER" || true
    - docker build --target builder --cache-from "$CI_REGISTRY_IMAGE_BRANCH_BUILDER" -t $CI_REGISTRY_IMAGE_BRANCH_BUILDER .
    - docker pull "$CI_REGISTRY_IMAGE_BRANCH" || true
    - docker build --cache-from "$CI_REGISTRY_IMAGE_BRANCH_BUILDER" --cache-from "$CI_REGISTRY_IMAGE_BRANCH" -t $CI_REGISTRY_IMAGE_BRANCH .
    - docker push $CI_REGISTRY_IMAGE_BRANCH_BUILDER
    - docker push $CI_REGISTRY_IMAGE_BRANCH
    - |
        if [ "$CI_COMMIT_REF_NAME" == "master" ]; then
          docker tag "$CI_REGISTRY_IMAGE_BRANCH" "${CI_REGISTRY_IMAGE}:latest"
          docker push "${CI_REGISTRY_IMAGE}:latest"
        fi


## constainer scan
# container_scan:
#   stage: scan
#   image: docker:stable
#   services:
#     - docker:stable-dind

#   allow_failure: true
#   script:
#     - docker run -d --name db arminc/clair-db:latest
#     - docker run -p 6060:6060 --link db:postgres -d --name clair --restart on-failure arminc/clair-local-scan:v2.0.6
#     - apk add -U wget ca-certificates
#     - docker pull $CI_REGISTRY_IMAGE_BRANCH
#     - wget https://github.com/arminc/clair-scanner/releases/download/v8/clair-scanner_linux_amd64
#     - mv clair-scanner_linux_amd64 clair-scanner
#     - chmod +x clair-scanner
#     - touch clair-whitelist.yml
#     - while( ! wget -q -O /dev/null http://docker:6060/v1/namespaces ) ; do sleep 1 ; done
#     - retries=0
#     - echo "Waiting for clair daemon to start"
#     - while( ! wget -T 10 -q -O /dev/null http://docker:6060/v1/namespaces ) ; do sleep 1 ; echo -n "." ; if [ $retries -eq 10 ] ; then echo " Timeout, aborting." ; exit 1 ; fi ; retries=$(($retries+1)) ; done
#     - ./clair-scanner -c http://docker:6060 --ip $(hostname -i) -r gl-container-scanning-report.json -l clair.log -w clair-whitelist.yml $CI_REGISTRY_IMAGE_BRANCH || true

#   artifacts:
#     paths: [gl-container-scanning-report.json]
#     expire_in: 1 week


## container deploy
# container_deploy:
#   stage: deploy
#   image: docker:stable
#   services:
#     - docker:stable-dind

#   script:
#     - docker pull "$CI_REGISTRY_IMAGE_BRANCH"
#     - docker push "$CI_REGISTRY_IMAGE_BRANCH"
#     - |
#         if [ "$CI_COMMIT_REF_NAME" == "master" ]; then
#           docker tag "$CI_REGISTRY_IMAGE_BRANCH" "${CI_REGISTRY_IMAGE}:latest"
#           docker push "${CI_REGISTRY_IMAGE}:latest"
#         fi

